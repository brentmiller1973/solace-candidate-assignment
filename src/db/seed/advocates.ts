import db from '..';
import { advocates, specialties as specialtiesTable, advocateSpecialties } from '../schema';

export const specialtiesData = [
  'Attention and Hyperactivity (ADHD)',
  'Bipolar',
  'Chronic pain',
  'Coaching (leadership, career, academic and wellness)',
  'Diabetic Diet and nutrition',
  'Domestic abuse',
  'Eating disorders',
  'General Mental Health (anxiety, depression, stress, grief, life transitions)',
  'Learning disorders',
  'LGBTQ',
  'Life coaching',
  'Medication/Prescribing',
  "Men's issues",
  'Neuropsychological evaluations & testing (ADHD testing)',
  'Obsessive-compulsive disorders',
  'Pediatrics',
  'Personal growth',
  'Personality disorders',
  'Relationship Issues (family, friends, couple, etc)',
  'Schizophrenia and psychotic disorders',
  'Sleep issues',
  'Substance use/abuse',
  'Suicide History/Attempts',
  'Trauma & PTSD',
  'Weight loss & nutrition',
  "Women's issues (post-partum, infertility, family planning)",
];

const getRandomSpecialtyIndices = () => {
  const count = Math.floor(Math.random() * 3) + 1; // 1-3 specialties per advocate
  const indices = new Set<number>();

  while (indices.size < count) {
    indices.add(Math.floor(Math.random() * specialtiesData.length));
  }

  return Array.from(indices);
};

// Arrays for generating diverse advocate data
const firstNames = [
  'John',
  'Jane',
  'Michael',
  'Emily',
  'David',
  'Sarah',
  'Chris',
  'Jessica',
  'Daniel',
  'Laura',
  'James',
  'Amanda',
  'Robert',
  'Lisa',
  'William',
  'Jennifer',
  'Richard',
  'Patricia',
  'Thomas',
  'Linda',
  'Mark',
  'Elizabeth',
  'Donald',
  'Barbara',
  'Steven',
  'Susan',
  'Paul',
  'Karen',
  'Andrew',
  'Nancy',
  'Joshua',
  'Betty',
  'Kenneth',
  'Helen',
  'Kevin',
  'Sandra',
  'Brian',
  'Donna',
  'George',
  'Carol',
  'Timothy',
  'Ruth',
  'Ronald',
  'Sharon',
  'Jason',
  'Michelle',
  'Edward',
  'Laura',
  'Jeffrey',
  'Sarah',
  'Ryan',
  'Kimberly',
  'Jacob',
  'Deborah',
  'Gary',
  'Dorothy',
  'Nicholas',
  'Lisa',
  'Eric',
  'Nancy',
  'Jonathan',
  'Karen',
  'Stephen',
  'Betty',
  'Larry',
  'Helen',
  'Justin',
  'Sandra',
  'Scott',
  'Donna',
  'Brandon',
  'Carol',
  'Benjamin',
  'Ruth',
  'Samuel',
  'Sharon',
  'Gregory',
  'Michelle',
  'Alexander',
  'Laura',
  'Frank',
  'Emily',
  'Raymond',
  'Kimberly',
  'Jack',
  'Deborah',
  'Dennis',
  'Dorothy',
  'Jerry',
  'Amy',
  'Tyler',
  'Angela',
  'Aaron',
  'Ashley',
  'Jose',
  'Brenda',
  'Henry',
  'Emma',
  'Adam',
  'Olivia',
];

const lastNames = [
  'Smith',
  'Johnson',
  'Williams',
  'Brown',
  'Jones',
  'Garcia',
  'Miller',
  'Davis',
  'Rodriguez',
  'Martinez',
  'Hernandez',
  'Lopez',
  'Gonzalez',
  'Wilson',
  'Anderson',
  'Thomas',
  'Taylor',
  'Moore',
  'Jackson',
  'Martin',
  'Lee',
  'Perez',
  'Thompson',
  'White',
  'Harris',
  'Sanchez',
  'Clark',
  'Ramirez',
  'Lewis',
  'Robinson',
  'Walker',
  'Young',
  'Allen',
  'King',
  'Wright',
  'Scott',
  'Torres',
  'Nguyen',
  'Hill',
  'Flores',
  'Green',
  'Adams',
  'Nelson',
  'Baker',
  'Hall',
  'Rivera',
  'Campbell',
  'Mitchell',
  'Carter',
  'Roberts',
  'Gomez',
  'Phillips',
  'Evans',
  'Turner',
  'Diaz',
  'Parker',
  'Cruz',
  'Edwards',
  'Collins',
  'Reyes',
  'Stewart',
  'Morris',
  'Morales',
  'Murphy',
  'Cook',
  'Rogers',
  'Gutierrez',
  'Ortiz',
  'Morgan',
  'Cooper',
  'Peterson',
  'Bailey',
  'Reed',
  'Kelly',
  'Howard',
  'Ramos',
  'Kim',
  'Cox',
  'Ward',
  'Richardson',
  'Watson',
  'Brooks',
  'Chavez',
  'Wood',
  'James',
  'Bennett',
  'Gray',
  'Mendoza',
  'Ruiz',
  'Hughes',
  'Price',
  'Alvarez',
  'Castillo',
  'Sanders',
  'Patel',
  'Myers',
  'Long',
  'Ross',
  'Foster',
  'Jimenez',
];

const cities = [
  'New York',
  'Los Angeles',
  'Chicago',
  'Houston',
  'Phoenix',
  'Philadelphia',
  'San Antonio',
  'San Diego',
  'Dallas',
  'San Jose',
  'Austin',
  'Jacksonville',
  'Fort Worth',
  'Columbus',
  'Charlotte',
  'San Francisco',
  'Indianapolis',
  'Seattle',
  'Denver',
  'Washington',
  'Boston',
  'El Paso',
  'Nashville',
  'Detroit',
  'Oklahoma City',
  'Portland',
  'Las Vegas',
  'Memphis',
  'Louisville',
  'Baltimore',
  'Milwaukee',
  'Albuquerque',
  'Tucson',
  'Fresno',
  'Sacramento',
  'Mesa',
  'Kansas City',
  'Atlanta',
  'Long Beach',
  'Colorado Springs',
  'Raleigh',
  'Miami',
  'Virginia Beach',
  'Omaha',
  'Oakland',
  'Minneapolis',
  'Tulsa',
  'Arlington',
  'Tampa',
  'New Orleans',
  'Wichita',
  'Cleveland',
  'Bakersfield',
  'Aurora',
  'Anaheim',
  'Honolulu',
  'Santa Ana',
  'Riverside',
  'Corpus Christi',
  'Lexington',
  'Stockton',
  'Henderson',
  'Saint Paul',
  'St. Louis',
  'Cincinnati',
  'Pittsburgh',
  'Greensboro',
  'Anchorage',
  'Plano',
  'Lincoln',
  'Orlando',
  'Irvine',
  'Newark',
  'Toledo',
  'Durham',
  'Chula Vista',
  'Fort Wayne',
  'Jersey City',
  'St. Petersburg',
  'Laredo',
];

const degrees = ['MD', 'PhD', 'MSW', 'PsyD', 'LCSW', 'LPC', 'LMFT', 'RN', 'NP', 'PA'];

// Generate 100 advocates
const generateAdvocateData = () => {
  const advocates = [];

  for (let i = 0; i < 100; i++) {
    const firstName = firstNames[Math.floor(Math.random() * firstNames.length)];
    const lastName = lastNames[Math.floor(Math.random() * lastNames.length)];
    const city = cities[Math.floor(Math.random() * cities.length)];
    const degree = degrees[Math.floor(Math.random() * degrees.length)];
    const yearsOfExperience = Math.floor(Math.random() * 25) + 1; // 1-25 years

    // Generate a realistic phone number
    const areaCode = Math.floor(Math.random() * 800) + 200; // 200-999
    const exchange = Math.floor(Math.random() * 800) + 200; // 200-999
    const number = Math.floor(Math.random() * 10000); // 0000-9999
    const phoneNumber = parseInt(`${areaCode}${exchange}${number.toString().padStart(4, '0')}`);

    advocates.push({
      firstName,
      lastName,
      city,
      degree,
      yearsOfExperience,
      phoneNumber,
    });
  }

  return advocates;
};

const advocateData = generateAdvocateData();

export { advocateData };
